<html>
<head>
    <title>N-Body</title>

    <style>
        body { margin: 0; }
        canvas { width: 100%; height: 100% }
    </style>
    <script src="http://code.jquery.com/jquery-3.0.0.min.js"></script>

</head>
<body>
<div>

    <p id = "orbital">
        Orbital Information
    </p>

    <button id="buttondatasend">Click Me!</button>
    <script>
        $(function() {
            $("#buttondatasend").click(function(){
                var data = {
                    x: $('[name=x1]').val(),
                    y: $('[name=x2]').val(),
                    z: $('[name=x3]').val(),
                    v_x: $('[name=v1]').val(),
                    v_y: $('[name=v2]').val(),
                    v_z: $('[name=v3]').val(),
                    m: $('[name=m1]').val()
                }
                $.ajax({
                    type: "POST",
                    url: '/api/data',
                    data: JSON.stringify(data)
                });
            })
        });

    </script>

    <table id = "orbital_params">
        <thead>
        <tr>
            <th>PARAMETER</th>
            <th><em>x</em></th>
            <th><em>y</em></th>
            <th><em>z</em></th>
        </tr>
        </thead>

        <tbody>
        <tr>
            <td>Position vector (AU)</td>
            <td><input type="text" name="x1" value="x1"> </td>
            <td><input type="text" name="x2" value="y1"></td>
            <td><input type="text" name="x3" value="z1"></td>
        </tr>
        <tr>
            <td>Velocity vector (km/s)</td>
            <td><input type="text" name="v1" value="x1"></td>
            <td><input type="text" name="v2" value="y1"></td>
            <td><input type="text" name="v3" value="z1"></td>
        </tr>
        <tr>
            <td>Body mass (Earth Masses)</td>
            <td><input type="text" name="m1" value="m1"></td>
        </tr>

        </tbody>

    </table>

</div>

<script src="https://www.gstatic.com/firebasejs/3.1.0/firebase.js"></script>
<script>
    // Initialize Firebase
    var config = {
        apiKey: "AIzaSyBvBjXXUx95wGs4A3n0CtlHNL_bxfKU6xM",
        authDomain: "nbodyblackmagic.firebaseapp.com",
        databaseURL: "https://nbodyblackmagic.firebaseio.com",
        storageBucket: "nbodyblackmagic.appspot.com",
    };
    firebase.initializeApp(config);
</script>

<script src="build/three.js"></script>
<script src="build/OrbitControls.js"></script>
<script src="https://www.gstatic.com/firebasejs/3.1.0/firebase.js"></script>
<script>
    // Initialize Firebase
    var config = {
        apiKey: "AIzaSyBvBjXXUx95wGs4A3n0CtlHNL_bxfKU6xM",
        authDomain: "nbodyblackmagic.firebaseapp.com",
        databaseURL: "https://nbodyblackmagic.firebaseio.com",
        storageBucket: "nbodyblackmagic.appspot.com",
    };
    firebase.initializeApp(config);
</script>


<script>
    var scene = new THREE.Scene();
    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );

    var renderer = new THREE.WebGLRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    document.body.appendChild( renderer.domElement );

    controls = new THREE.OrbitControls( camera, renderer.domElement );

    //controls.addEventListener( 'change', render ); // add this only if there is no animation loop (requestAnimationFrame)

    var frames = [];
    var frameNum = 0;
    var timestep = 0;
    var bufferSize = 180;
    var renderFrame = 0;

    var objects = []

    firebase.database().ref('/nbodyblackmagic/frame').on('value', function(snapshot) {
        var frameObj = snapshot.val()
        timestep = frameObj.timestep;
        frames = frames.concat(frameObj.frames);
        frameNum += frameObj.frames.length;
    });

    var posScale =1000.0;
    camera.position.z = 400;

    var buffered = function() {
        return (frames.length >= bufferSize)
    }

    var render = function () {
         setTimeout(function() {
             requestAnimationFrame( render );
         }, 1000 / 30)

         if (buffered()) {
             var frame = frames[renderFrame].frame;
             //Render the frame
             for (i = 0; i < frame.length; ++i) {
                 var body = frame[i];
                 if (i >= objects.length) {
                     var mass = body.mass;
                     var radius = 8 + 3 * Math.log10(mass + 1);
                     objects.push(
                     {
                         geometry: new THREE.SphereGeometry(radius, 32, 32),
                         mesh: new THREE.MeshBasicMaterial({color: 0xffff00}),
                         sphere: undefined
                     });
                     objects[i].sphere = new THREE.Mesh(objects[i].geometry, objects[i].mesh);
                     scene.add(objects[i].sphere);

                 }

                 var objectToRender = objects[i];

                 var x = body.pos.x * posScale;
                 var y = body.pos.y * posScale;
                 var z = body.pos.z * posScale;
                 objectToRender.sphere.position.set(x, y, z);

             }



             if (renderFrame < frames.length - 1) {
                 ++renderFrame;
             }

         }

         controls.enableDamping = false;
         controls.dampingFactor = .25;
         controls.enableZoom = true;
         controls.rotateSpeed = 1;
         controls.zoomSpeed = 1;

         renderer.render(scene, camera);
    };

    render();
</script>
</body>
</html>